{
    "version": "0.2.0",
    "configurations": [
        {  // normal debug on Windows host to USB based J-Link
            "name": "J-Link Windows Host with USB",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "jlink",
            "serverpath": "${env:SEGGER_PATH}/JLinkGDBServerCL",
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            "armToolchainPath": "${env:TOOLCHAIN_PATH}",  // needed for the gdb
            "device": "LPC55S16",
            "interface": "swd",
            "runToEntryPoint": "main", // "main" or for example "ResetISR"
            "postLaunchCommands": [
                "monitor reset",
                "monitor semihosting enable",
                "monitor semihosting ioclient 1", // 1: telnet (port 2333); 2: gdb; 3: both telnet and gdbclient output
            ],
            "rtos": "FreeRTOS",
            "svdFile": "./sdk/device/LPC55S16.svd",
        },
        {  // normal debug on Windows host to USB based J-Link
            "name": "J-Link with usbipd",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "jlink",
            "serverpath": "JLinkGDBServerCLExe",
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            "device": "LPC55S16",
            "interface": "swd",
            "runToEntryPoint": "main", // "main" or for example "ResetISR"
            "postLaunchCommands": [
                "monitor reset",
                "monitor semihosting enable",
                "monitor semihosting ioclient 1", // 1: telnet (port 2333); 2: gdb; 3: both telnet and gdbclient output
            ],
            "rtos": "FreeRTOS",
            "svdFile": "./sdk/device/LPC55S16.svd",
        },
        {  // debug from DevContainer, on the host the JLinkRemoteServerCL is running
            "name": "J-Link DevContainer with JLinkRemoteServerCL",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "jlink",
            "ipAddress": "192.168.65.254", // IP of "host.docker.internal", // run JLinkRemoteServerCL on host
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            "device": "LPC55S16",
            "interface": "swd",
            "runToEntryPoint": "main", // "main" or for example "ResetISR"
            "postLaunchCommands": [
                "monitor reset",
                "monitor semihosting enable",
                "monitor semihosting ioclient 1", // 1: telnet (port 2333); 2: gdb; 3: both telnet and gdbclient output
            ],
            "rtos": "FreeRTOS",
            "svdFile": "./sdk/device/LPC55S16.svd",
        },
        {  // debug from DevContainer with remote GDB server on the host
            "name": "J-Link DevContainer with gdbServer",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "external",
            "gdbTarget": "host.docker.internal:2331", // start server on host with `JLinkGDBServerCL -device LPC55S16 -if SWD`
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            "device": "LPC55S16",
            "interface": "swd",
            "runToEntryPoint": "main", // "main" or "ResetISR"
            "postLaunchCommands": [
                "monitor reset",
                "monitor semihosting enable",
                "monitor semihosting ioclient 1", // 1: telnet (port 2333); 2: gdb; 3: both telnet and gdbclient output
            ],
            "rtos": "FreeRTOS",
            "svdFile": "./sdk/device/LPC55S16.svd",
        },
        {  // debug with LinkServer on host
            "name": "LinkServer cortex-debug local",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "external",
            "gdbTarget": "localhost:3333",  // /usr/local/LinkServer_25.7.33/LinkServer gdbserver --keep-alive LPC55S16:LPCXpresso55S16
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            "armToolchainPath": "${env:TOOLCHAIN_PATH}",
            "postLaunchCommands": [
                "monitor semihosting enable"
            ],
            "runToEntryPoint": "main", // or "ResetISR"
            "rtos": "FreeRTOS",
            "svdFile": "./sdk/device/LPC55S16.svd",
        },        
        { // debug configuration for debugging using DevContainer, with the debug server running on the host
            "name": "LinkServer cortex-debug remote",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "external",
            "gdbTarget": "host.docker.internal:3333",
            //"preLaunchTask": "LinkServer: flash",
            // LinkServer gdbserver --keep-alive LPC55S16:LPCXpresso55S16
            //"preLaunchTask": "LinkServer: gdbserver",
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            //"armToolchainPath": "${env:TOOLCHAIN_PATH}",  // needed for the gdb
            "postLaunchCommands": [
                "monitor semihosting enable"
            ],
            "runToEntryPoint": "main", // or "ResetISR"
            "rtos": "FreeRTOS",
            "svdFile": "./sdk/device/LPC55S16.svd",
        },
        {  // debug with LinkServer in DevContainer using usbipd
            "name": "LinkServer DevContainer usbipd",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "external",
            "gdbTarget": "localhost:3333",  // /usr/local/LinkServer_25.7.33/LinkServer gdbserver --keep-alive LPC55S16:LPCXpresso55S16
            "cwd": "${workspaceFolder}",
            "executable": "${command:cmake.launchTargetPath}",
            //"armToolchainPath": "${env:TOOLCHAIN_PATH}",
            "postLaunchCommands": [
                "monitor semihosting enable"
            ],
            "runToEntryPoint": "main", // or "ResetISR"
            "rtos": "FreeRTOS",
            "svdFile": "./sdk/device/LPC55S16.svd",
        },        
    ]
}